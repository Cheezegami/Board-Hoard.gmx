<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
hsp = 0;
vsp = 0;


grav = 1.8;
maxGrav = 10;

jumpSpeed = 0.15;
jumpDuration = 15;
jumpCalculation = 0;
linearJump = 1;
jump = false;
jumpSpin = false;



moveSpeed = 4;
step = 10;
constantspeed = 7;

collision = false;
collisionBonusTime = 8;
collisionBonusCalculation = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Get the player's input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);

//React to inputs
move = key_left + key_right;
hsp = moveSpeed;


if(move != 0) {
    move_contact_solid(90, step);
    if(move &gt; 0) {
        move_contact_solid(0, hsp);
        //image_xscale = 1;
    }
    else if (move &lt; 0) {
        move_contact_solid(180, hsp);
        //image_xscale = -1;
    }
    move_contact_solid(270, step);
}
 
if(!place_free(x,y+16))
{
    collision = true;
}
else
{
    collision = false;
}

if(collision == true) {
    collisionBonusCalculation = collisionBonusTime;
    if(key_jump == true &amp;&amp; jumpCalculation &lt;= 0)
    {
        // Temporary in Player.
        randomize();
        jump = true;
        if(random(10) &gt; 5)
        {
            jumpSpin = true;
        }
        else
        {
            jumpSpin = false;
        }
        jumpCalculation = jumpDuration;
    }
}

if(jump == true)
{
    if(jumpSpin == true)
    {
        image_angle -= 360 / jumpDuration;
    }
    vspeed -= (jumpCalculation * jumpSpeed);
    if(jumpCalculation &lt;= 0)
    {
        jump = false;
    }
    jumpCalculation--;
}

else {
    image_angle = 0;
}

if(vspeed &lt; maxGrav &amp;&amp; collisionBonusCalculation &lt;= 0) {
    vspeed += grav;
}

if(collisionBonusCalculation &gt; 0) {
    if(vspeed &gt; 0) {
        vspeed *= 0.7;
    }
    collisionBonusCalculation--;
}

move_contact_solid(90, step);
move_contact_solid(0, constantspeed);
move_contact_solid(270, step);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tileCollision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.0199999995529652</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,64</point>
    <point>0,64</point>
  </PhysicsShapePoints>
</object>
